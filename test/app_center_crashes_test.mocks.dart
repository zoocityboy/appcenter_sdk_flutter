// Mocks generated by Mockito 5.4.2 from annotations
// in appcenter/test/app_center_crashes_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:appcenter/src/crashes.g.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CrashesApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrashesApi extends _i1.Mock implements _i2.CrashesApi {
  MockCrashesApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> generateTestCrash() => (super.noSuchMethod(
        Invocation.method(
          #generateTestCrash,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<bool> hasReceivedMemoryWarningInLastSession() =>
      (super.noSuchMethod(
        Invocation.method(
          #hasReceivedMemoryWarningInLastSession,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> hasCrashedInLastSession() => (super.noSuchMethod(
        Invocation.method(
          #hasCrashedInLastSession,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> crashesSetEnabled(bool? arg_enabled) => (super.noSuchMethod(
        Invocation.method(
          #crashesSetEnabled,
          [arg_enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<bool> crashesIsEnabled() => (super.noSuchMethod(
        Invocation.method(
          #crashesIsEnabled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> trackException(
    String? arg_message,
    String? arg_type,
    String? arg_stackTrace,
    Map<String?, String?>? arg_properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #trackException,
          [
            arg_message,
            arg_type,
            arg_stackTrace,
            arg_properties,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
