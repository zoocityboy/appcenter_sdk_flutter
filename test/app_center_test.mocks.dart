// Mocks generated by Mockito 5.4.2 from annotations
// in appcenter/test/app_center_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:appcenter/src/appcenter.g.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AppCenterApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppCenterApi extends _i1.Mock implements _i2.AppCenterApi {
  MockAppCenterApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> start(
    String? arg_secret,
    bool? arg_usePrivateTrack,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #start,
          [
            arg_secret,
            arg_usePrivateTrack,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> setEnabled(bool? arg_enabled) => (super.noSuchMethod(
        Invocation.method(
          #setEnabled,
          [arg_enabled],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<bool> isEnabled() => (super.noSuchMethod(
        Invocation.method(
          #isEnabled,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> isConfigured() => (super.noSuchMethod(
        Invocation.method(
          #isConfigured,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<String> getInstallId() => (super.noSuchMethod(
        Invocation.method(
          #getInstallId,
          [],
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  _i3.Future<bool> isRunningInAppCenterTestCloud() => (super.noSuchMethod(
        Invocation.method(
          #isRunningInAppCenterTestCloud,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<void> setLogLevel(int? arg_level) => (super.noSuchMethod(
        Invocation.method(
          #setLogLevel,
          [arg_level],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
